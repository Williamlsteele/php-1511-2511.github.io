annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red")
ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red")
ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red", size=3)
grid.arrange(p1,p2,p3,p4, ncol=2)
p1 <- ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red", size=3)
p2 <- ggplot(data, aes(X.all2, Y.all2)) + geom_point() +
annotate("point", x = X.suspect2, y = Y.suspect2, colour = "red", size=3)
p3 <- ggplot(data, aes(X.all3, Y.all3)) + geom_point() +
annotate("point", x = X.suspect3, y = Y.suspect3, colour = "red", size=3)
p4 <- ggplot(data, aes(X.all4, Y.all4)) + geom_point() +
annotate("point", x = X.suspect4, y = Y.suspect4, colour = "red", size=3)
grid.arrange(p1,p2,p3,p4, ncol=2)
p1 <- ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red", size=3) + lab("X") + ylab("Y")
p2 <- ggplot(data, aes(X.all2, Y.all2)) + geom_point() +
annotate("point", x = X.suspect2, y = Y.suspect2, colour = "red", size=3)+ lab("X") + ylab("Y")
p3 <- ggplot(data, aes(X.all3, Y.all3)) + geom_point() +
annotate("point", x = X.suspect3, y = Y.suspect3, colour = "red", size=3)+ lab("X") + ylab("Y")
p4 <- ggplot(data, aes(X.all4, Y.all4)) + geom_point() +
annotate("point", x = X.suspect4, y = Y.suspect4, colour = "red", size=3)+ lab("X") + ylab("Y")
grid.arrange(p1,p2,p3,p4, ncol=2)
out1 <- lm(data=data, Y.all1~X.all1 )
plot(out1, 4)
install.packages("olsrr")
install.packages("olsrr")
library(olsrr)
install.packages("ddalpha")
library(devtools)
?install_github
install_github(ddalpha, cran)
install_github(ddalpha, username=cran)
?install_git
install_git("https://github.com/cran/ddalpha")
install.packages("Rcpp")
library(devtools)
install_git("https://github.com/cran/ddalpha")
library(olsrr)
library(olsrr)
library(ddalpha)
library(olsrr)
ols_cooksd_barplot(out1)
data
ols_cooksd_chart(out1)
ols_dfbetas_panel(out1)
ols_dffits_plot(out1)
out1 <- lm(data=data, Y.all1~X.all1 )
out2 <- lm(data=data, Y.all2~X.all2 )
out3 <- lm(data=data, Y.all3~X.all3 )
out4 <- lm(data=data, Y.all4~X.all4 )
ols_dffits_plot(out2)
p21 <- ols_cooksd_barplot(out2)
p22 <- ols_cooksd_chart(out2)
p23 <- ols_dfbetas_panel(out2)
p24 <- ols_dffits_plot(out2)
grid.arrange(p21,p22,p23,p24, ncol=2)
library(gridExtra)
grid.arrange(p21,p22,p23,p24, ncol=2)
p21 <- ols_cooksd_barplot(out2)
p22 <- ols_cooksd_chart(out2)
p23 <- ols_dfbetas_panel(out2)
p24 <- ols_dffits_plot(out2)
p31 <- ols_cooksd_barplot(out3)
p32 <- ols_cooksd_chart(out3)
p33 <- ols_dfbetas_panel(out3)
p34 <- ols_dffits_plot(out3)
p41 <- ols_cooksd_barplot(out4)
p42 <- ols_cooksd_chart(out4)
p43 <- ols_dfbetas_panel(out4)
p44 <- ols_dffits_plot(out4)
grid.arrange(p41,p42,p43,p44, ncol=2)
out1 <- lm(data=data, Y.all1~X.all1 )
out2 <- lm(data=data, Y.all2~X.all2 )
out3 <- lm(data=data, Y.all3~X.all3 )
out4 <- lm(data=data, Y.all4~X.all4 )
p11 <- ols_cooksd_barplot(out1)
p12 <- ols_cooksd_chart(out1)
p13 <- ols_dfbetas_panel(out1)
p14 <- ols_dffits_plot(out1)
grid.arrange(p11,p12,p13,p14, ncol=2)
?colnames
library(readr)
poverty<- read_table(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", header=FALSE, sep="")
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", header=FALSE, sep="")
?read_delim
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE, sep="")
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE, delim="")
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE)
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE, delim="\t")
poverty
library(readr)
poverty<- read_delim(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE, delim=" ")
poverty
library(readr)
poverty<- read_table(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", col_names=FALSE)
poverty
poverty<- read.table(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", header=FALSE, sep="")
library(survival)
pbc$mean_cent_age = pbc$age - mean(pbc$age)
pbc$stage_dummy = as.factor(pbc$stage)
mod1 <- lm(data=pbc, platelet~mean_cent_age+stage_dummy)
mod2 <- lm(data=pbc, platelet~mean_cent_age+stage)
anova(mod1,mod2)
library(tidyverse)
library(tidyverse)
#R thinks gnp is factor(group) data
poverty %>% select(gnp) %>% class()
library(tidyverse)
poverty <- poverty %>%
colnames(poverty)<- c("birthrate", "deathrate", "infdeath", "le.male", "le.female",
"gnp", "group", "country")
poverty<- read.table(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", header=FALSE, sep="")
library(tidyverse)
colnames(poverty)<- c("birthrate", "deathrate", "infdeath", "le.male", "le.female",
"gnp", "group", "country")
#This will print some of the beginning rows of data
head(poverty)
#R thinks gnp is factor(group) data
poverty %>% select(gnp) %>% class()
#R thinks gnp is factor(group) data
poverty %>% select(gnp) %>% class(gnp)
#R thinks gnp is factor(group) data
poverty %>% class(gnp)
names(poverty)
#R thinks gnp is factor(group) data
poverty %>% class("gnp")
#R thinks gnp is factor(group) data
class(poverty$gnp)
table(poverty$poverty)
poverty$poverty
View(poverty)
boxplot(poverty$le.male, poverty$le.female)
#Histogram
ggplot(poverty, aes(birthrate)) + geom_histogram()
#Boxplots
ggplot(poverty, aes(le.female)) + geom_boxplot()
#Boxplots
ggplot(poverty, aes(le.female)) + geom_boxplot()
#Boxplots
ggplot(poverty, aes(y=le.female)) + geom_boxplot()
#Boxplots
ggplot(poverty, aes(x= "", y=le.female)) + geom_boxplot()
#Boxplots
ggplot(poverty, aes(x= "", y=le.female)) + geom_boxplot() + xlab("")
#Scatter Plots
ggplot(poverty, aes(x=le.female, y=infdeath)) + geom_point()
poverty %>%
select(gnp)%>%
summarise_each(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
library(tidyverse)
#R thinks gnp is factor(group) data
class(poverty$gnp)
poverty %>%
#Replace the * values with NA
poverty[poverty=="*"] <- NA
library(tidyverse)
#R thinks gnp is factor(group) data
class(poverty$gnp)
#Replace the * values with NA
poverty[poverty=="*"] <- NA
# Tell R that gnp is numeric data
poverty$gnp <- as.numeric(as.character(poverty$gnp))
poverty %>%
select(gnp)%>%
summarise_each(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
mean(poverty$gnp, na.rm=TRUE)
median(poverty$gnp, na.rm=TRUE)
sd(poverty$gnp, na.rm=TRUE)
var(poverty$gnp, na.rm=TRUE)
min(poverty$gnp, na.rm=TRUE)
max(poverty$gnp, na.rm=TRUE)
poverty %>%
select(gnp)%>%
summarise_each(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
poverty %>%
select(gnp)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
gnp
gnp <- poverty %>%
select(gnp)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
gnp
birthrate <- poverty %>%
select(birthrate)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
bind_rows(gnp, birthrate)
bind_rows(gnp, birthrate) %>% rownames(c("gnp", "birthrate"))
bind_rows(gnp, birthrate) %>% add_rownames(c("gnp", "birthrate"))
bind_rows(gnp, birthrate) %>% add_rownames(c("gnp", "birthrate"))
bind_rows(gnp, birthrate) %>% add_rownames()
birthrate <- poverty %>%
select(birthrate, gnp)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
poverty %>%
select(birthrate, gnp)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
poverty %>%
select(birthrate, gnp)%>%
summarise_all(funs(mean(., na.rm=TRUE), median(., na.rm=TRUE), sd(., na.rm=TRUE), var(., na.rm=TRUE), min(., na.rm=TRUE), max(., na.rm=TRUE)))
poverty %>%
select(birthrate, gnp)%>%
summarise(mean=mean(., na.rm=T), median=median(., na.rm=TRUE) )
poverty %>%
select(birthrate)%>%
summarise(mean=mean(., na.rm=T), median=median(., na.rm=TRUE) )
poverty %>%
select(birthrate)%>%
summarise(summary(., nar.rm=T) )
poverty %>%
select(gnp)%>%
summarise(summary(., nar.rm=T) )
poverty %>%
select(gnp)%>%
summarise(summary = summary(., nar.rm=T) )
poverty %>%
select(gnp)%>%
summarise(summary = summary() )
poverty %>%
select(gnp)%>%
summarise(summary = summary(gnp) )
my_summary <- poverty %>%
select_if(is.numeric) %>%
map(~tidy(summary(.x))) %>%
map_if(., has_n_col, add_na_col) %>%
do.call(rbind, .)
library(broom)
my_summary <- poverty %>%
select_if(is.numeric) %>%
map(~tidy(summary(.x))) %>%
map_if(., has_n_col, add_na_col) %>%
do.call(rbind, .)
library(purr)
library(purrr)
my_summary <- poverty %>%
select_if(is.numeric) %>%
map(~tidy(summary(.x))) %>%
map_if(., has_n_col, add_na_col) %>%
do.call(rbind, .)
add_na_col <- function(x){
mutate(x, na = 0)
}
has_n_col <- function(x, n = 6){
return(ncol(x) == n)
}
my_summary <- poverty %>%
select_if(is.numeric) %>%
map(~tidy(summary(.x))) %>%
map_if(., has_n_col, add_na_col) %>%
do.call(rbind, .)
my_summary
poverty %>%
dplyr::select_if(is.numeric)  %>%
lapply(., function(x) tidy(summary(x)))
poverty %>%
dplyr::select_if(is.numeric)  %>%
lapply(., function(x) tidy(summary(x))) %>%
unlist()
install.packages("stargazer")
?stargazer
library(stargazer)
library(stargazer)
?stargazer
#install.packages("stargazer")
library(tidyverse)
library(stargazer)
poverty %>%
stargazer(., type="text", title="Descriptive statistics", digits=2)
#install.packages("stargazer")
library(tidyverse)
library(stargazer)
poverty %>%
stargazer(., type="html", title="Descriptive statistics", digits=2)
#install.packages("stargazer")
library(tidyverse)
library(stargazer)
poverty %>%
stargazer(., type="html", title="Descriptive statistics", digits=2)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=0.2)+xlab("Fitted Value")
p3<-ggplot(mod2, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=0.2)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
anscombe
mod1 <- lm(y1 ~ x1, data=anscombe)
mod2 <- lm(y2 ~ x2, data=anscombe)
mod3 <- lm(y3 ~ x3, data=anscombe)
mod4 <- lm(y4 ~ x4, data=anscombe)
library(broom)
library(dplyr)
tidy1 <- tidy(mod1, conf.int = T)
tidy2 <- tidy(mod2, conf.int = T)
tidy3 <- tidy(mod3, conf.int = T)
tidy4 <- tidy(mod4, conf.int = T)
knitr::kable(bind_rows(tidy1,tidy2, tidy3, tidy4)[,-c(3,4)])
glance1 <- glance(mod1)
glance2 <- glance(mod2)
glance3 <- glance(mod3)
glance4 <- glance(mod4)
knitr::kable(bind_rows(glance1,glance2, glance3, glance4))
library(ggplot2)
library(gridExtra)
p1 <- ggplot(anscombe, aes(x1,y1)) + geom_point() + geom_smooth(method="lm", se=FALSE)+theme_bw()
p2 <- ggplot(anscombe, aes(x2,y2)) + geom_point() + geom_smooth(method="lm", se=FALSE)+theme_bw()
p3 <- ggplot(anscombe, aes(x3,y3)) + geom_point() + geom_smooth(method="lm", se=FALSE)+theme_bw()
p4 <- ggplot(anscombe, aes(x4,y4)) + geom_point() + geom_smooth(method="lm", se=FALSE)+theme_bw()
grid.arrange(p1,p2,p3, p4, ncol=2)
p1 <- ggplot(mod1, aes(.fitted, .resid)) + geom_point() +theme_bw()
p2 <- ggplot(mod2, aes(.fitted, .resid)) + geom_point()+theme_bw()
p3 <- ggplot(mod3, aes(.fitted, .resid)) + geom_point()+theme_bw()
p4 <- ggplot(mod4, aes(.fitted, .resid)) + geom_point()+theme_bw()
grid.arrange(p1,p2,p3, p4, ncol=2)
anscombe$x2sq <- anscombe$x2^2
mod2a <- lm(y2 ~ x2 +  x2sq, data=anscombe)
knitr::kable(tidy(mod2a, conf.int=T)[,-c(3,4)])
knitr::kable(glance(mod2a))
ggplot(mod2a, aes(.fitted, .resid)) + geom_point()+theme_bw()
library(haven)
fhs <- read_dta("fhs.dta")
p1 = ggplot(fhs, aes(sysbp1))  + geom_histogram() + xlab("Systolic Blood Pressure mm/Hg")
p2 = ggplot(fhs, aes(sysbp1))  + geom_density() + xlab("Systolic Blood Pressure mm/Hg")
grid.arrange(p1,p2, ncol=2)
fhs <- fhs %>% mutate(sysbp1t = log(sysbp1))
p1 = ggplot(fhs, aes(sysbp1t))  + geom_histogram() + xlab("log Systolic Blood Pressure mm/Hg")
p2 = ggplot(fhs, aes(sysbp1t))  + geom_density() + xlab("log Systolic Blood Pressure mm/Hg")
grid.arrange(p1,p2, ncol=2)
mod <- lm(sysbp1 ~ bmi1 + age1, data=fhs)
knitr::kable(tidy(mod, conf.int=T)[,-c(3,4)])
knitr::kable(glance(mod))
mod_syst <- lm(sysbp1t ~ bmi1 + age1, data=fhs)
knitr::kable(tidy(mod_syst, conf.int=T)[,-c(3,4)])
knitr::kable(glance(mod_syst))
p3<-ggplot(mod2, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=0.2)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
p3<-ggplot(mod2, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=1)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
p3<-ggplot(mod2, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=2)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
p3<-ggplot(mod_syst, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=1)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
p3<-ggplot(mod_syst, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE, span=2)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p3
library(olsrr)
ols_rvsp_plot(mod1)
ols_rvsp_plot(mod2)
ols_rvsp_plot(mod3)
ols_rvsp_plot(mod4)
p1 = ggplot(fhs, aes(sysbp1))  + geom_histogram() + xlab("Systolic Blood Pressure mm/Hg")
p2 = ggplot(fhs, aes(sysbp1))  + geom_density() + xlab("Systolic Blood Pressure mm/Hg")
grid.arrange(p1,p2, ncol=2)
ols_rvsp_plot(mod2)
# Find the slope and intercept of the line that passes through the 1st and 3rd
# quartile of the normal q-q plot
y     <- quantile(rstandard(mod_syst), c(0.25, 0.75)) # Find the 1st and 3rd quartiles
x     <- qnorm( c(0.25, 0.75))         # Find the matching normal values on the x-axis
slope <- diff(y) / diff(x)             # Compute the line slope
int   <- y[1] - slope * x[1]           # Compute the line intercept
ggplot(mod_syst, aes(sample=.stdresid)) + stat_qq() +
geom_abline(intercept=int, slope=slope) +
xlab("Theoretical Quantiles")+ylab("Standardized Residuals") +
theme_bw()
ols_rsd_qqplot(mod_syst)
ols_norm_test(mod_syst)
ols_norm_test(mod1)
ols_norm_test(mod_syst)
ols_f_test(mod_syst, rhs=TRUE)
ols_bartlett_test(mod_syst)
ols_score_test(mod_syst)
?ols_corr_test
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
library(olsrr)
ols_cooksd_barplot()
library(olsrr)
ols_cooksd_barplot(mod1)
set.seed(12345)
X = runif(150, .5, 3.5)
beta0 = 1.0
beta1 = 1.5
sigma = 0.7
Y = beta0 + beta1*X + sigma*rnorm(150) # The regular process
# Contaminated data: Four cases
X.suspect1 = 1.5; Y.suspect1 = 3.3
X.suspect2 = 1.5; Y.suspect2 = 9.7
X.suspect3 = 9.0; Y.suspect3 = 14.5
X.suspect4 = 9.3; Y.suspect4 = 0.6
Y.all1 = c(Y, Y.suspect1); X.all1 = c(X, X.suspect1)
Y.all2 = c(Y, Y.suspect2); X.all2 = c(X, X.suspect2)
Y.all3 = c(Y, Y.suspect3); X.all3 = c(X, X.suspect3)
Y.all4 = c(Y, Y.suspect4); X.all4 = c(X, X.suspect4)
data <- as_data_frame(cbind(X.all1, X.all2, X.all3, X.all4, Y.all1, Y.all2, Y.all3, Y.all4))
library(gridExtra)
p1 <- ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red", size=3) + lab("X") + ylab("Y")
p2 <- ggplot(data, aes(X.all2, Y.all2)) + geom_point() +
annotate("point", x = X.suspect2, y = Y.suspect2, colour = "red", size=3)+ lab("X") + ylab("Y")
p3 <- ggplot(data, aes(X.all3, Y.all3)) + geom_point() +
annotate("point", x = X.suspect3, y = Y.suspect3, colour = "red", size=3)+ lab("X") + ylab("Y")
p4 <- ggplot(data, aes(X.all4, Y.all4)) + geom_point() +
annotate("point", x = X.suspect4, y = Y.suspect4, colour = "red", size=3)+ lab("X") + ylab("Y")
grid.arrange(p1,p2,p3,p4, ncol=2)
library(gridExtra)
p1 <- ggplot(data, aes(X.all1, Y.all1)) + geom_point() +
annotate("point", x = X.suspect1, y = Y.suspect1, colour = "red", size=3) + xlab("X") + ylab("Y")
p2 <- ggplot(data, aes(X.all2, Y.all2)) + geom_point() +
annotate("point", x = X.suspect2, y = Y.suspect2, colour = "red", size=3)+ xlab("X") + ylab("Y")
p3 <- ggplot(data, aes(X.all3, Y.all3)) + geom_point() +
annotate("point", x = X.suspect3, y = Y.suspect3, colour = "red", size=3)+ xlab("X") + ylab("Y")
p4 <- ggplot(data, aes(X.all4, Y.all4)) + geom_point() +
annotate("point", x = X.suspect4, y = Y.suspect4, colour = "red", size=3)+ xlab("X") + ylab("Y")
grid.arrange(p1,p2,p3,p4, ncol=2)
out1 <- lm(data=data, Y.all1~X.all1 )
out2 <- lm(data=data, Y.all2~X.all2 )
out3 <- lm(data=data, Y.all3~X.all3 )
out4 <- lm(data=data, Y.all4~X.all4 )
p11 <- ols_cooksd_barplot(out1)
p12 <- ols_cooksd_chart(out1)
p13 <- ols_dfbetas_panel(out1)
p14 <- ols_dffits_plot(out1)
p21 <- ols_cooksd_barplot(out2)
p22 <- ols_cooksd_chart(out2)
p23 <- ols_dfbetas_panel(out2)
p24 <- ols_dffits_plot(out2)
par(mfrow=c(2,2))
p11 <- ols_cooksd_barplot(out1)
p12 <- ols_cooksd_chart(out1)
p13 <- ols_dfbetas_panel(out1)
p14 <- ols_dffits_plot(out1)
p14 <- ols_dffits_plot(out1)
par(mfrow=c(2,2))
p11 <- ols_cooksd_barplot(out1)
p12 <- ols_cooksd_chart(out1)
p13 <- ols_dfbetas_panel(out1)
p14 <- ols_dffits_plot(out1)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE),
widths=c(3,1), heights=c(1,2))
p11 <- ols_cooksd_barplot(out1)
p12 <- ols_cooksd_chart(out1)
p13 <- ols_dfbetas_panel(out1)
p14 <- ols_dffits_plot(out1)
p13 <- ols_dfbetas_panel(out1)
par(mfrow=c(2,2))
ols_cooksd_barplot(out1)
ols_cooksd_chart(out1)
ols_dfbetas_panel(out1)
ols_dffits_plot(out1)
data <- as_data_frame(cbind(X.all1, X.all2, X.all3, X.all4, Y.all1, Y.all2, Y.all3, Y.all4))
library(olsrr)
ols_dffits_plot(out2)
library(car)
mmps(out1)
mmps(out2)
mmps(out3)
mmps(out4)
library(olsrr)
ols_cooksd_barplot(out4)
ols_dfbetas_panel(out4)
ols_dffits_plot(out4)
out4a <- lm(data=data[-151,], Y.all4~X.all4 )
tidy4a <- tidy(out4a, conf.int = T)
knitr::kable(bind_rows(out4, out4a)[-c(3,4)])
glance4a <- glance(out4a)
knitr::kable(bind_rows(out4, out4a))
tidy4a <- tidy(out4a, conf.int = T)
tidy4 <- tidy(out4, conf.int = T)
knitr::kable(bind_rows(tidy4, tidy4a)[-c(3,4)])
out4a <- lm(data=data[-151,], Y.all4~X.all4 )
tidy4a <- tidy(out4a, conf.int = T)
tidy4 <- tidy(out4, conf.int = T)
knitr::kable(bind_rows(tidy4, tidy4a)[-c(3,4)])
glance4a <- glance(out4a)
glance4 <- glance(out4)
knitr::kable(bind_rows(glance4, glance4a))
glance4a <- glance(out4a)
glance4 <- glance(out4)
knitr::kable(bind_rows(glance4, glance4a))
mmps(out4a)
