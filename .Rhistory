geom_smooth(alpha=0.7) +
geom_point(alpha = 0.6)
data_bootstrap <-
data %>%
modelr::bootstrap(10000)
data_bootstrap %>%
DT::datatable()
??seq_range
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(ggplot2)
library(tidyr)
library(broom)
library(tidyverse)
library(modelr)
library(readr)
ree <- read_csv("ree.csv")
library(readr)
ree <- read_csv("ree.csv")
library(tidyverse)
library(DT)
ree %>%
datatable()
library(BSDA)
attach(ree)
SIGN.test(CF, Healthy)
detach()
binom.test(2,13)
attach(cars)
wilcox.test(mpg, am)
detach(cars)
cars
View(cars)
cars <- cars
attach(cars)
wilcox.test(as.numeric(mpg), as.numeric(am))
detach(cars)
detach(cars)
detach(cars)
detach()
detach()
detach()
detach()
detach()
attach(cars)
wilcox.test(mpg, am)
detach()
mtcars
attach(mtcars)
wilcox.test(mpg, am)
detach()
attach(cars)
wilcox.test(as.numeric(mpg), as.numeric(am))
detach()
library(tidyverse)
cars <- as_data_frame(mtcars)
attach(cars)
wilcox.test(mpg, am)
detach()
library(BSDA)
Arthriti %>% datatable()
library(DT)
library(BSDA)
Arthriti %>% datatable()
kruskal.test(time~treatment, data=Arthriti)
#Pearson from Monotonic Decreasing
cor(x2,y2, method="pearson")
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
poverty<- read.table(file="http://www.amstat.org/publications/jse/datasets/poverty.dat.txt", header=FALSE, sep="")
library(tidyverse)
colnames(poverty)<- c("birthrate", "deathrate", "infdeath", "le.male", "le.female",
"gnp", "group", "country")
#This will print some of the beginning rows of data
head(poverty)
library(tidyverse)
#R thinks gnp is factor(group) data
class(poverty$gnp)
#Replace the * values with NA
poverty[poverty=="*"] <- NA
# Tell R that gnp is numeric data
poverty$gnp <- as.numeric(as.character(poverty$gnp))
#log.gnp most economic models use log.gnp instead of gnp
poverty$log.gnp <- log(poverty$gnp)
library(ggplot2)
#Histogram
ggplot(poverty, aes(birthrate)) + geom_histogram()
#Boxplots
ggplot(poverty, aes(x= "", y=le.female)) + geom_boxplot() + xlab("")
#Scatter Plots
ggplot(poverty, aes(x=le.female, y=infdeath)) + geom_point()
#install.packages("stargazer")
library(tidyverse)
library(stargazer)
poverty %>%
stargazer(., type="html", title="Descriptive statistics", digits=2)
library(broom)
fit1 <- lm(infdeath ~ le.female, data=poverty)
tidy(fit1, conf.int=T)[,-c(3:4)]
ggplot(poverty,aes(y = infdeath, x = le.female)) + geom_point() + geom_smooth()
#linear
library(broom)
fit1 <- lm(infdeath ~ le.female, data=poverty)
tidy(fit1, conf.int=T)[,-c(3:4)]
confint(fit1)
#infant death rate on log gnp
ggplot(poverty,aes(y = infdeath, x = log.gnp)) + geom_point() + geom_smooth()
fit2 <- lm(infdeath ~ log.gnp, data=poverty)
tidy(fit2, conf.int=T)[,-c(3:4)]
confint(fit2)
#infant death rate on birthrate
ggplot(poverty,aes(y = infdeath, x = birthrate)) + geom_point() + geom_smooth()
fit3 <- lm(infdeath ~ birthrate, data=poverty)
tidy(fit3, conf.int=T)[,-c(3:4)]
confint(fit3)
fit4 <- lm(infdeath ~ le.female + birthrate + log.gnp, data = poverty)
summary(fit4)$adj.r.squared
summary(fit4)$adj.r.squared
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
install.packages("simPH")
# Load packages
library(survival)
library(simPH)
# Subset data
bladder1 <- bladder[bladder$enum < 5, ]
# Estimate coxph model (note that this model is for code illustration only)
M1 <- coxph(Surv(stop, event) ~ (rx + size + number) + strata(enum) +
cluster(id), bladder1)
# Find predicted values
M1Fit <- survfit(M1)
# Plot strata in a grid
ggfitStrata(M1Fit, byStrata = TRUE)
# Plot all in one
ggfitStrata(M1Fit, byStrata = FALSE)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
#knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
#knitr::opts_chunk$set(eval=F)
mod3 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy2 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy2[-c(3,4)])
library(tidyverse)
Rossi %>%
mutate( age.cat <- cut(age, c(0, 19, 25, 30, Inf)))
library(survival)
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
DT::datatable(Rossi)
library(survival)
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
DT::datatable(Rossi)
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
library(tidyverse)
Rossi %>%
mutate( age.cat <- cut(age, c(0, 19, 25, 30, Inf)))
mod3 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy2 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy2[-c(3,4)])
library(tidyverse)
Rossi <- Rossi %>%
mutate( age.cat <- cut(age, c(0, 19, 25, 30, Inf)))
mod3 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy2 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy2[-c(3,4)])
Rossi %>%
mutate( age.cat <- cut(age, c(0, 19, 25, 30, Inf)))
library(tidyverse)
Rossi <- Rossi %>%
mutate( age.cat =cut(age, c(0, 19, 25, 30, Inf)))
mod3 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy2 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy2[-c(3,4)])
library(simPH)
ggfitStrata(mod3, byStrata = FALSE)
library(simPH)
ggfitStrata(mod3, byStrata = FALSE)
library(simPH)
mod3_fit <- survfit(mod3)
ggfitStrata(mod3_fit, byStrata = FALSE)
?kable
mod3 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy2 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy2[-c(3,4)], format='markdown')
1-0.7111
mod2 <- glm( arrest ~ fin + prio + age.cat, data=Rossi)
tidy2 <- tidy(mod2, exponentiate=T)
knitr::kable(tidy2[-c(3,4)], format='markdown')
ggplot(Rossi, aes(x=week)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
ggplot(Rossi, aes(x=week, fill=arrest)) +
geom_histogram(aes(y=..density..))     # Histogram with density instead of count on y-axis
ggplot(Rossi, aes(x=week, colour=arrest)) + geom_density()
Rossi$arrest
ggplot(Rossi, aes(x=week, y=arrest, fill=week)) + geom_boxplot() +
guides(fill=FALSE)
ggplot(Rossi, aes(x=arrest, y=week, fill=arrest)) + geom_boxplot() +
guides(fill=FALSE)
Rossi <- Rossi %>% mutate(arrest.fact = as.factor(arrest))
ggplot(Rossi, aes(x=week, fill=arrest.fact)) +
geom_histogram(aes(y=..density..))     # Histogram with density instead of count on y-axis
ggplot(Rossi, aes(x=week, fill=age.cat)) +
geom_histogram(aes(y=..density..))     # Histogram with density instead of count on y-axis
ggplot(Rossi, aes(x=age.cat, y=week, fill=age.cat)) + geom_boxplot() +
guides(fill=FALSE)
mod2 <- glm( arrest ~ fin + prio + age.cat, data=Rossi, family="binomial")
tidy2 <- tidy(mod2, exponentiate=T)
knitr::kable(tidy2[-c(3,4)], format='markdown')
mod3 <- glm( arrest ~ fin + prio + age.cat, data=Rossi, family="poisson")
tidy3 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy3[-c(3,4)], format='markdown')
mod3 <- glm( arrest ~ fin + prio + age.cat, data=Rossi, family="poisson")
tidy3 <- tidy(mod3, exponentiate=T)
knitr::kable(tidy3[-c(3,4)], format='markdown')
knitr::kable(tidy1[-c(3,4)], format='markdown')
mod1 <-  coxph(Surv(week, arrest) ~ fin +
prio + strata(age.cat), data=Rossi)
tidy1 <- tidy(mod1, exponentiate=T)
knitr::kable(tidy1[-c(3,4)], format='markdown')
knitr::kable(tidy1[-c(3,4)], format='markdown')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE)
library(broom)
library(survival)
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message=FALSE)
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
library(ggplot2)
library(ROCR)
prob <- predict(mod1.auto)
pred <- prediction(prob, sah$arrest)
prob <- predict(mod1)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
library(ResourceSelection)
hoslem.test(Rossi$arrest, fitted(mod1), g=10)
mod2 <- glm(arrrest ~ (fin+ prio)*age, , family="binomial", data=Rossi
library(ggplot2)
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrrest ~ (fin+ prio)*age, , family="binomial", data=Rossi
library(ggplot2)
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrrest ~ (fin+ prio)*age,  family="binomial", data=Rossi )
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrest ~ (fin+ prio)*age,  family="binomial", data=Rossi )
library(ggplot2)
library(ROCR)
prob <- predict(mod2)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
url <- "http://socserv.mcmaster.ca/jfox/Books/Companion/data/Rossi.txt"
Rossi <- read.table(url, header=TRUE)
Rossi$age.cat <- cut(Rossi$age, c(0, 19, 25, 30, Inf))
mod1 <- glm(arrest ~ fin + prio + age, family="binomial", data=Rossi)
mod2 <- glm(arrest ~ (fin+ prio)*age.cat,  family="binomial", data=Rossi )
library(ggplot2)
library(ROCR)
prob <- predict(mod2)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
mod1 <- glm(arrest ~ fin + prio + age.cat, family="binomial", data=Rossi)
library(ggplot2)
library(ROCR)
prob <- predict(mod1)
pred <- prediction(prob, Rossi$arrest)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
mod2 <- glm(arrest ~ fin + prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod2, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
mod3 <- glm(arrest ~ fin * prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod3, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
anova(mod2, mod3)
kable(glance(mod3), method="latex")
mod4 <- coxph(Surv(week, arrest) ~ fin * prio + age.cat, data=subset(Rossi, week>0))
kable(tidy(mod4, exponentiate = T, conf.int = T)[,-c(3,4)], method="latex")
kable(tidy(mod4)[,-c(3,4)], method="latex")
, exponentiate =
kable(tidy(mod4, exponentiate = T)[,-c(3,4)], method="latex")
kable(glance(mod4), method="latex")
kable(glance(mod4), method="latex")
kable(glance(mod4), method="latex")[,-c(4:7)]
kable(glance(mod4)[,-c(4:7)], method="latex")
kable(glance(mod4)[,-c(4:10)], method="latex")
kable(glance(mod4)[,-c(5:10)], method="latex")
kable(glance(mod4)[,-c(5:10)], method="latex")
cox.zph(mod4)
kable(glance(mod4)[,-c(5:10)], method="latex")
cox.zph(mod4)
kable(cox.zph(mod4), method="latex")
cox.zph(mod4)
library(survival)
mod4 <- coxph(Surv(week, arrest) ~ fin * prio + age, data=subset(Rossi, week>0))
glm(arrest ~ fin * prio + age.cat, family="poisson", data=Rossi)
library(broom)
library(knitr)
kable(tidy(mod4, exponentiate = T)[,-c(3,4)], method="latex")
mod6 <- coxph(Surv(week, arrest) ~ fin * prio + strata(age.cat), data=subset(Rossi, week>0))
kable(tidy(mod6, exponentiate = T)[,-c(3,4)], method="latex")
3+3+3+2+2+2+6+6+6
3+3+3+2+2+2+6+6+4+10+10+10+10
3+3+3+2+4+2+2+6+6+4
install.packages("ROCR")
install.packages("ROCR")
library(slidify)
getwd()
slidify("Notes/lect-01-intro.Rmd")
slidify("Notes/lect-02a-ggplot.Rmd")
slidify("Notes/lect-02b-tidying.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
library(slidify)
slidify("Notes/lect-02a-ggplot.Rmd")
ggplot(data=comic_characters, aes(x=align, y=log_app)) +
geom_point(aes(alpha=year))
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-03-transforming.Rmd")
head(gapminder)
gapminder %>%
select(country, lifeExp) %>%
arrange(lifeExp)
gapminder %>%
group_by(country) %>%
summarise_each(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
gapminder %>%
group_by(country) %>%
summarise_all(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
gapminder %>%
group_by(country) %>%
summarise_at(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), lifeExp)
?summarise_each
gapminder
gapminder %>%
select(country, gdpPercap, pop) %>%
transmute(gdp = gdpPercap*pop)
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
gapminder %>%
group_by(year) %>%
tally()
gapminder %>%
count(year)
gapminder %>% group_by(year) %>% tally(sort=TRUE)
gapminder %>% count_(year, sort=TRUE)
?count_()
gapminder %>% count_(year, sort=TRUE)
count_(gapminder, year)
slidify("Notes/lect-04-further-sums.Rmd")
gapminder <- gapminder %>%
mutate(gdp=gdpPercap*pop)
gapminder
gapminder
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
gapminder %>%
group_by(continent)
summarise(total_gdp = sum(gdp))
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
slidify("Notes/lect-04-further-sums.Rmd")
library(readr)
hug_urm_firstgen_biostat <- read_csv("C:/Users/sullivanstats/Downloads/hug-urm-firstgen-biostat.csv")
View(hug_urm_firstgen_biostat)
names(hug_urm_firstgen_biostat)
hug_urm_firstgen_biostat %>% table(race_hispanic)
hug_urm_firstgen_biostat %>% group_by(race_hispanic) %>% tally()
hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes")
hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes") %>% select(cas_id, last_name, first_name)
hispanic <- hug_urm_firstgen_biostat %>% filter(race_hispanic=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% group_by(race_cuban) %>% tally()
hug_urm_firstgen_biostat %>% group_by(race_mexican) %>% tally()
hug_urm_firstgen_biostat %>% filter(race_mexican=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_south_american=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_american_indian=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_pacific_islander=="Yes") %>% select(cas_id, last_name, first_name)
hug_urm_firstgen_biostat %>% filter(race_black=="Yes") %>% select(cas_id, last_name, first_name)
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-05-lin-reg.Rmd")
slidify("Notes/lect-01-intro.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
warnings()
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
slidify("Notes/lect-02-ggplot.Rmd")
library(slidify)
library(ggplot2)
library(fivethiryeight)
require(tidyverse)
library(broom)
?tidy
install.packages("slidify")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install.packages(c("ggplot2", "broom"))
install.packages(c("fivethirtyeight"))
library(slidify)
slidify("Notes/lect-07-multiple-linear")
slidify("Notes/lect-07-multiple-linear.Rmd")
install.packages("kable")
?kable
library(readr)
library(tidyverse)
bikes <- read_csv("../Notes/Data/bike_sharing.csv") %>%
mutate(season = as.factor(season)) %>%
mutate(weather=as.factor(weather))
library(readr)
library(tidyverse)
bikes <- read_csv("Notes/Data/bike_sharing.csv") %>%
mutate(season = as.factor(season)) %>%
mutate(weather=as.factor(weather))
mod.final <- lm(count~season+weather+humidity+windspeed, data=bikes)
tidy(mod.final)[-1,-c(3:4)]
glance(mod.final)
mod.final <- lm(count~season+weather+humidity+windspeed, data=bikes)
kable(tidy(mod.final)[-1,-c(3:4)])
library(knitr)
mod1 <- lm(count~season+weather+humidity+windspeed, data=bikes)
mod2 <- lm(count~weather+humidity+windspeed, data=bikes)
anova(mod1, mod2)
tidy(anova(mod1, mod2))
mod1 <- lm(count~season+weather+humidity+windspeed, data=bikes)
mod2 <- lm(count~weather+humidity+windspeed, data=bikes)
anova(mod1, mod2)
install.packages("oslrr")
install.packages("olsrr")
library(cmprsk)
?cuminc
