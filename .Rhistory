tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 10000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1c <- lm(data=raw.corr, response~predictor1 )
mod2c <- lm(data=raw.corr, response~predictor2)
mod3c <- lm(data=raw.corr, response~predictor1 + predictor2)
mod4c <- lm(data=raw.corr, response~predictor2 + predictor1)
tidy1c <- tidy(mod1c, conf.int=T)[-1,-c(3:4)]
tidy2c <- tidy(mod2c, conf.int=T)[-1,-c(3:4)]
tidy3c <- tidy(mod3c, conf.int=T)[-1,-c(3:4)]
tidy4c <- tidy(mod4c, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1c,tidy2c,tidy3c, tidy4c))
glance1c <- glance(mod1c)[,c(1:5)]
glance2c <- glance(mod2c)[,c(1:5)]
glance3c <- glance(mod3c)[,c(1:5)]
glance4c <- glance(mod4c)[,c(1:5)]
knitr::kable(bind_rows(glance1c,glance2c,glance3c, glance4c))
tidy11c <- tidy(anova(mod1c))[1, c(1:4)]
tidy22c <- tidy(anova(mod2c))[1, c(1:4)]
tidy33c <- tidy(anova(mod3c))[c(1:2), c(1:4)]
tidy44c <- tidy(anova(mod4c))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11c,tidy22c,tidy33c, tidy44c))
library(broom)
library(dplyr)
mod1 <- lm(data=raw, response~predictor1 )
mod2 <- lm(data=raw, response~predictor2)
mod3 <- lm(data=raw, response~predictor1 + predictor2)
mod4 <- lm(data=raw, response~predictor2 + predictor1)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
tidy4 <- tidy(mod4, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3, tidy4))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
glance4 <- glance(mod4)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3, glance4))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:4)]
tidy44 <- tidy(anova(mod4))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33, tidy44))
library(car)
vif(mod3)
library(car)
vif(mod3)
vif(mod4)
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(vif1,vif2)
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
vif(mod3c)
vif(mod4c)
vif(mod4c)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1c <- lm(data=raw.corr, response~predictor1 )
mod2c <- lm(data=raw.corr, response~predictor2)
mod3c <- lm(data=raw.corr, response~predictor1 + predictor2)
mod4c <- lm(data=raw.corr, response~predictor2 + predictor1)
tidy1c <- tidy(mod1c, conf.int=T)[-1,-c(3:4)]
tidy2c <- tidy(mod2c, conf.int=T)[-1,-c(3:4)]
tidy3c <- tidy(mod3c, conf.int=T)[-1,-c(3:4)]
tidy4c <- tidy(mod4c, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1c,tidy2c,tidy3c, tidy4c))
tidy11c <- tidy(anova(mod1c))[1, c(1:4)]
tidy22c <- tidy(anova(mod2c))[1, c(1:4)]
tidy33c <- tidy(anova(mod3c))[c(1:2), c(1:4)]
tidy44c <- tidy(anova(mod4c))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11c,tidy22c,tidy33c, tidy44c))
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
Rcor = matrix(cbind(1,.80,.2,  .80,1,.9,  .2,.9,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
#Correlation
round(cor(raw.corr),3)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
?knitr::kable
10+10+12+10+6+40
10+10+12+10+10+40
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
phscrc <- read_dta("phscrc.dta")
phscrc$age.cat <- cut(phscrc$age, c(40,50,60,70, 90), right=FALSE)
phscrc$alcohol.use <- factor(phscrc$alcohol>0, labels=c("no", "yes"))
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable)
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable)
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
mytable
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
knitr::kable(mytable)
?pandoc.table
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable, style="rmarkdown")
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable, style="multiline")
pandoc.table(mytable, style="grid")
mod1 <- glm(crc ~ alcohol.use+ age, phscrc, family=binomial(link="logit"))
mod2 <- glm(crc ~ alcohol.use*age, phscrc, family=binomial(link="logit"))
phscrc$age.cent <- phscrc$age - mean(phscrc$age,na.rm=TRUE)
mod3 <- glm(crc ~ alcohol.use*age.cent, phscrc, family=binomial(link="logit"))
library(broom)
tidy(mod1, conf.int=T)[,-c(3:4)]
library(broom)
knitr::kable(tidy(mod1, conf.int=T)[,-c(3:4)])
mod1 <- glm(crc ~ alcohol.use+ age, phscrc, family=binomial(link="logit"))
tidy(mod1, conf.int = T)[,-c(3:4)]
glance(mod1)
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
mod5 <- glm(formula = crc ~ factor(alcohol), family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod5, conf.int=T)[,-c(3:4)])
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
anova(mod4, mod5, test="Chisq")
mod4 <- glm(formula = crc ~ alcohol, family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod4, conf.int = T)[,-c(3:4)])
mod5 <- glm(formula = crc ~ factor(alcohol), family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod5, conf.int=T)[,-c(3:4)])
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
library(ResourceSelection)
install.packages("ResourceSelection")
library(ResourceSelection)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k)
summary(mod.back.auto)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k)
summary(mod.back.auto)
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k=2)
summary(mod.back.auto)
library(ggplot2)
library(ROCR)
prob <- predict(mod.back.auto)
pred <- prediction(prob, sah$dead)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
install.packages("ROCR")
?hoslem.test
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=6)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=8)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k=2)
summary(mod.back.auto)
summary(mod.back.auto)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
class(sah$dead)
table(sah$dead)
sah$dead <- as.numeric(sah$dead)
table(sah$dead)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
1/0 - 1/0
low.weight <- read.table("https://drive.google.com/uc?export=download&id=0B8CsRLdwqzbzMzJyVkt5QkdvVnM", header=TRUE, sep=",")
library(tidyverse)
low.weight %>% filter(race==2)
table(low.weight$race)
library(olsrr)
?ols_dfbetas_panel()
low.weight <- read.table("https://drive.google.com/uc?export=download&id=0B8CsRLdwqzbzMzJyVkt5QkdvVnM", header=TRUE, sep=",")
library(tidyverse)
low.weight <- low.weight %>%
mutate(low=as.factor(low)) %>%
mutate(low = fct_recode(low,
"nbw"=0,
"lbw"=1))
levels(low.weight$low)
class(low.weight$low)
low.weight %>%
mutate(low=as.factor(low))
low.weight <- low.weight %>%
mutate(low=as.factor(low))
str(low.weight)
low.weight <- low.weight %>%
mutate(low=as.factor(low)) %>%
mutate(low = fct_recode(low,
"nbw"=0,
"lbw"=1))
low.weight <- low.weight %>%
mutate(low=as.factor(low)) %>%
mutate(low = fct_recode(low,
"nbw"="0",
"lbw"="1"))
install.packages("magrittr")
install.packages("mosaic")
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=TRUE,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(tidyverse)
library(haven)
phscrc <- read_dta("phscrc.dta")
phscrc <- phscrc %>%
mutate(age.cat = cut(age, c(40,50,60,70, 90), right=FALSE)) %>%
mutate(alcohol.use = factor(phscrc$alcohol>0, labels=c("no", "yes"))
library(tidyverse)
library(haven)
phscrc <- read_dta("phscrc.dta")
phscrc <- phscrc %>%
mutate(age.cat = cut(age, c(40,50,60,70, 90), right=FALSE)) %>%
mutate(alcohol.use = factor(phscrc$alcohol>0, labels=c("no", "yes")))
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
kable(tidy(mod.back.auto, exponentiate=T, conf.int=T)[,-c(3:4)])
library(broom)
kable(tidy(mod.back.auto, exponentiate=T, conf.int=T)[-1,-c(3:4)])
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k=2)
summary(mod.back.auto)
library(broom)
kable(tidy(mod.back.auto, exponentiate=T, conf.int=T)[-1,-c(3:4)])
install.packages("VGAM")
install.packages("AER")
View(fit1)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
knitr::opts_chunk$set(eval=T)
load("sat.Rdata")
library(shiny)
library(ggplot2)
data <- sat
shinyApp(
# Define UI for iris application
shinyUI(pageWithSidebar(
# Application title
headerPanel(""),
# Sidebar with controls to select the variable to plot against mpg
# and to specify whether outliers should be included
sidebarPanel(
selectInput("variable", "First variable:",
list(
"expend", "ratio", "salary", "frac", "verbal", "math", "sat"
)),
selectInput("variable2", "Second variable:",
list(
"expend", "ratio", "salary", "frac", "verbal", "math", "sat"
))
),
mainPanel(
h3(textOutput("caption")),
plotOutput("plot")
)
)),
# Define server logic required to plot variables
shinyServer(function(input, output) {
# Create a reactive text
text <- reactive({
paste(input$variable, 'versus', input$variable2)
})
formulaText <- reactive({
paste(input$variable, "~", input$variable2)
})
# Return as text the selected variables
output$caption <- renderText({
text()
})
# Generate a plot of the requested variables
output$plot <- renderPlot({
p <- ggplot(data, aes_string(x=input$variable, y=input$variable2)) + geom_point()
print(p)
})
}),
options = list(height = 600)
)
pairs(~., data=sat)
library(car)
scatterplot.matrix(~., data=sat)
scatterplot.matrix(~., data=sat[,-1])
library(ggplot2)
plotmatrix(sat[,-1], colour="gray20")
library(GGally)
plotmatrix(sat[,-1], colour="gray20")
ggcorr(sat[,-1], colour="gray20")
ggpairs(sat[,-1])
ggpairs(sat[,-1])
library(broom)
library(tidyverse)
library(tidyverse)
library(knitr)
mod1 <- lm(sat~expend, data=sat)
mod2 <- lm(sat~ratio, data=sat)
mod3 <- lm(sat~salary, data=sat)
mod4 <- lm(sat~frac, data=sat)
mod5 <- lm(sat~verbal, data=sat)
mod6 <- lm(sat~math, data=sat)
tidy2 <- tidy(mod2)[-1, -c(3:4)]
tidy3 <- tidy(mod3)[-1, -c(3:4)]
tidy5 <- tidy(mod5)[-1, -c(3:4)]
tidy6 <- tidy(mod6)[-1, -c(3:4)]
kable(bind_rows(tidy1:tidy6))
kable(bind_rows(c(tidy1:tidy6)))
kable(bind_rows(tidy1,tidy2,tdiy3,tidy4,tidy5,tidy6))
kable(bind_rows(tidy1,tidy2,tidy3,tidy4,tidy5,tidy6))
mod7 <- lm(sat~expend+ratio, data=sat)
summary(mod7)
mmps(mod1)
ols_rsd_plot(mod1)
library(olsrr)
ols_rsd_plot(mod1)
ols_rvsp_plot(mod1)
mod7 <- lm(sat~expend*ratio, sat)
summary(mod7)
read_xls("http://college.cengage.com/mathematics/brase/understandable_statistics/7e/students/datasets/mlr/excel/mlr06.xls")
library(readxl)
read_xls("http://college.cengage.com/mathematics/brase/understandable_statistics/7e/students/datasets/mlr/excel/mlr06.xls")
library(readxl)
read_xls("crimes.xlsx")
read_excel("crimes.xlsx")
library(readxl)
read_excel("crimes.xlsx")
library(readxl)
crimes <- read_excel("labs/crimes.xlsx")
View(crimes)
library(tidyverse)
crimes <- crimes %>%
rename( tot_crime = X1,
rep_crime = X2,
pol_fund = X3,
`25plus_hs` = X4,
not_hs_grad = X5,
in_college = X6,
college = X7  )
library(broom)
library(tidyverse)
library(knitr)
mod1 <- lm(tot_crime~rep_crime, data=crimes)
mod2 <- lm(tot_crime~pol_fund, data=crimes)
mod3 <- lm(tot_crime~`25plus_hs`, data=crimes)
mod4 <- lm(tot_crime~not_hs_grad, data=crimes)
mod5 <- lm(tot_crime~in_college, data=crimes)
mod6 <- lm(tot_crime~college, data=crimes)
tidy1 <- tidy(mod1)[-1, -c(3:4)]
tidy2 <- tidy(mod2)[-1, -c(3:4)]
tidy3 <- tidy(mod3)[-1, -c(3:4)]
tidy4 <- tidy(mod4)[-1, -c(3:4)]
tidy5 <- tidy(mod5)[-1, -c(3:4)]
tidy6 <- tidy(mod6)[-1, -c(3:4)]
kable(bind_rows(tidy1,tidy2,tidy3,tidy4,tidy5,tidy6))
library(GGally)
ggcorr(crimes, colour="gray20")
ggpairs(crimes)
library(olsrr)
?ols_corr_test
model <- lm(mpg ~ disp + hp + wt + qsec, data = mtcars)
ols_corr_test(model)
5.99+119.99+2.65+7.99+5.49+10.62+6.69+23.22+6.41+74.25+37.92+15+5.99+64.30+12+24.13+41.2+26.74+36.48+17.98+81.87+3.99+7.18+36.95+6.98+12.39+20.6+72.19+15+43.15+56.09+99+143.81+5.66+775+54.98+9.28+79+65+90+9.81+120.35+30.96+74.80+5.59+62.46+569.31+88.16+19.99+21.3+2.95+25.97+5.66+35+7.22+24.29+14+14.23+82.78+61.19+6.55+32.5+17.68+4.99+64.11+63.50+8.56
5.99+119.99+2.65+7.99+5.49+10.62+6.69+23.22+6.41+74.25+37.92+15+5.99+64.30+12+24.13+41.2+26.74+36.48+17.98+81.87+3.99+7.18+36.95+6.98+12.39+20.6+72.19+15+43.15+56.09+99+143.81+5.66+775+54.98+9.28+79+65+90+9.81+120.35+30.96+74.80+5.59+62.46+569.31+88.16+19.99+21.3+2.95+25.97+5.66+35+7.22+24.29+14+14.23+82.78+61.19+6.55+32.5+17.68+4.99+64.11+63.50+8.56-139.99
3485.32-775-119.99-24.13-41.20-26.74-36.48-569.31-63.50-32.72
3485.32-1796.25
6579*8/2
