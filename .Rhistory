"Odds Ratio"= round(exp(coef(mod)), 3),
"95% CI of OR"=  paste("(", round(exp(summary(mod)@coef3[,1] - 1.96* summary(mod)@coef3[,2]), 3), ",", round(exp(summary(mod)@coef3[,1] + 1.96* summary(mod)@coef3[,2]),3) , ")"),
"p-Value " = round(summary(mod)@coef3[,4], 4)     )
knitr::kable(better.table, format='markdown')
library(VGAM)
fit1 <- vglm(belief ~ race + sex, data=after.life, weights=count, family=multinomial)
mod <-fit1
better.table <- cbind("Estimate" = round(coef(mod), 3),
"Odds Ratio"= round(exp(coef(mod)), 3),
"95% CI of OR"=  paste("(", round(exp(summary(mod)@coef3[,1] - 1.96* summary(mod)@coef3[,2]), 3), ",", round(exp(summary(mod)@coef3[,1] + 1.96* summary(mod)@coef3[,2]),3) , ")"),
"p-Value " = round(summary(mod)@coef3[,4], 4)     )
knitr::kable(better.table, format='markdown')
library(haven)
sah <- read_dta("sah.dta")
str(sah$sah)
#Reverse order for self assessed health
sah$sah <- factor(sah$sah, levels=rev(levels(sah$sah)))
str(sah$sah)
library(haven)
sah <- read_dta("sah.dta")
str(sah$sah)
#Reverse order for self assessed health
sah$sah <- as.factor(sah$sah, levels=rev(levels(sah$sah)))
str(sah$sah)
as.factor(sah$sah)
str(sah$sah)
rev(levels(sah$sah)
)
levels(sah$sah)
sah <- read_dta("sah.dta")
levels(sah$sah)
rev(levels(sah$sah)
)
str(sah$sah)
sah$sah$names
attr(sah$sah)
attributes(sah$sah)
sah$sah <- as.factor(sah$sah, levels=attributes(sah$sah)$labels)
?as.factor
sah$sah <- factor(sah$sah, levels=attributes(sah$sah)$labels)
table(sah$sah)
sah <- read_dta("sah.dta")
#Reverse order for self assessed health
sah$sah2 <- factor(sah$sah)
library(haven)
sah <- read_dta("sah.dta")
str(sah$sah)
#Reverse order for self assessed health
sah$sah2 <- factor(sah$sah)
levels(sah$sah2) <- attributes(sah$sah)$names
str(sah$sah)
attributes(sah$sah)$names
str(sah$sah)
attributes(sah$sah)$lables$names
attributes(sah$sah)$labels$names
attributes(sah$sah)
attributes(sah$sah)$labels
levels(sah$sah2) <- attributes(sah$sah)$lables
levels(sah$sah2) <- attributes(sah$sah)$labels
table(sah$sah2)
lables(sah$sah2) <- attributes(sah$sah)$labels
labels(sah$sah2) <- attributes(sah$sah)$labels
attributes(sah$sah)$labels
names(attributes(sah$sah)$labels)
#Reverse order for self assessed health
sah$sah2 <- factor(sah$sah, labels = names(attributes(sah$sah)$labels))
table(sah$sah2)
sah$sah <- factor(sah$sah2, levels = rev(levels(sah$sah2)))
table(sah$sah)
library(VGAM)
fit2 <- vglm(as.ordered(sah) ~ pperf + perf + cogerr + mile + loop + age, data=sah,  family=acat(reverse=TRUE))
mod <-fit2
better.table <- cbind("Estimate" = round(coef(mod), 3),
"Odds Ratio"= round(exp(coef(mod)), 3),
"95% CI of OR"=  paste("(", round(exp(summary(mod)@coef3[,1] - 1.96* summary(mod)@coef3[,2]), 3), ",", round(exp(summary(mod)@coef3[,1] + 1.96* summary(mod)@coef3[,2]),3) , ")"),
"p-Value " = round(summary(mod)@coef3[,4], 4)     )
knitr::kable(better.table[1:6,])
knitr::kable(better.table[7:15,])
knitr::kable(better.table[15:21,])
library(VGAM)
fit3 <- vglm(as.ordered(sah) ~ pperf + perf + cogerr + mile + loop + age, data=sah,  family=cumulative)
mod <-fit3
better.table <- cbind("Estimate" = round(coef(mod), 3),
"Odds Ratio"= round(exp(coef(mod)), 3),
"95% CI of OR"=  paste("(", round(exp(summary(mod)@coef3[,1] - 1.96* summary(mod)@coef3[,2]), 3), ",", round(exp(summary(mod)@coef3[,1] + 1.96* summary(mod)@coef3[,2]),3) , ")"),
"p-Value " = round(summary(mod)@coef3[,4], 4)     )
knitr::kable(better.table[1:6,])
fit.pbc1 <- lm(plat.cnt ~ dis.stage, data=pbc)
pbc <- read.table("pbc.csv", header=TRUE, sep=",")
colnames(pbc) <- c("casenum", "n.days", "death", "treated", "age" , "sex",
"ascites", "hepatomegaly", "spiders", "edema",
"bilirubin", "choles", "albumin", "ur.cop",
"alk.phos", "sgot", "trigly",
"plat.cnt", "pt", "dis.stage")
names(summ)
library(leaps)
leaps <- regsubsets(sysbp1t~ bmi1 + age1 +
diabp1 + prevhyp1 + prevchd1 + prevmi1 +
cursmoke1 + cigpday1 + bpmeds1, data=fhs, nbest=1)
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(knitr)
library(broom)
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small",
eval=TRUE,
warning = FALSE,
message=FALSE)
library(foreign)
fhs <- read.dta("https://drive.google.com/uc?export=download&id=0B8CsRLdwqzbzWFc2R0ozTlAzcjQ")
library(car)
p<-powerTransform(fhs$sysbp1)
fhs$sysbp1t <-bcPower(fhs$sysbp1,p$lambda)
library(leaps)
leaps <- regsubsets(sysbp1t~ bmi1 + age1 +
diabp1 + prevhyp1 + prevchd1 + prevmi1 +
cursmoke1 + cigpday1 + bpmeds1, data=fhs, nbest=1)
library(dplyr)
summ <- summary(leaps)
kable(as_data_frame(summ$which)[,-1], format="markdown")
library(car)
layout(matrix(1:2, ncol = 2))
# Adjusted R2
res.legend <- subsets(leaps, statistic="adjr2", legend = FALSE, min.size = 3,
main = "Adjusted R^2")
# Mallow Cp
res.legend <- subsets(leaps, statistic="cp", legend = FALSE, min.size = 3,
main = "Mallow Cp")
abline(a = 1, b = 1, lty = 2)
res.legend
plot(leaps, scale="adjr2", main="")
#Variables we care about in model
myvars <- c("sysbp1t", "bmi1", "age1", "diabp1", "prevhyp1", "prevchd1",
"prevmi1", "cursmoke1", "cigpday1", "bpmeds1")
#Selecting only these variables
fhs_sub_sel <- fhs[myvars]
#Selecting only those rows with complete cases
fhs_sub_sel <- fhs_sub_sel[complete.cases(fhs_sub_sel),]
pbc <- read.table("pbc.csv", header=TRUE, sep=",")
colnames(pbc) <- c("casenum", "n.days", "death", "treated", "age" , "sex",
"ascites", "hepatomegaly", "spiders", "edema",
"bilirubin", "choles", "albumin", "ur.cop",
"alk.phos", "sgot", "trigly",
"plat.cnt", "pt", "dis.stage")
fit.pbc1 <- lm(plat.cnt ~ dis.stage, data=pbc)
kable(tidy(fit.pbc1, conf.int=T)[, -c(3,4)])
fit.pbc2 <- lm(plat.cnt ~ as.factor(dis.stage), data=pbc)
kable(tidy(fit.pbc2, conf.int=T)[, -c(3,4)])
anova(fit.pbc1, fit.pbc2)
install.packages("survey")
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
#Sometimes strata only have one person in them
# We need to tell R how to adjust for this
options(survey.lonely.psu = "adjust")
svytotal(~insurance, brfss.design)
svytotal(~imprace, brfss.design)
#We could also have this done for more than one
#variable at a time:
svytotal(~insurance + imprace, brfss.design)
library(survey)
?svytotal
library(survey)
#Sometimes strata only have one person in them
# We need to tell R how to adjust for this
options(survey.lonely.psu = "adjust")
svytotal(~insurance, brfss.design)
svytotal(~imprace, brfss.design)
#We could also have this done for more than one
#variable at a time:
svytotal(~insurance + imprace, brfss.design)
View(mod)
library(VGAM)
cfibrosis
exp(-2.6)
library(olsrr)
?ols_rvsp_plot
?ols_score_test
?ols_f_test
library(knitr)
options(digits=3)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(echo=FALSE)
cigs <- read.table("http://www.amstat.org/publications/jse/datasets/cigarettes.dat.txt")
names(cigs) <- c("brand", "tar", "nicotine", "weight", "CO" )
library(tidyverse)
library(broom)
library(knitr)
fit1 <- lm(CO ~tar, data=cigs)
fit2 <- lm(CO ~nicotine, data=cigs)
fit3 <- lm(CO ~weight, data=cigs)
tidy1 <- tidy(fit1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(fit2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(fit3, conf.int=T)[-1,-c(3:4)]
kable(bind_rows(tidy1,tidy2,tidy3), format = "latex")
bind_rows(tidy1,tidy2,tidy3)
glance1 <- glance(fit1)
glance2 <- glance(fit2)
glance3 <- glance(fit3)
tab <- bind_rows(glance1,glance2,glance3)[,c(1:5)]
rownames(tab) <- c("tar", "nicotine", "weight")
kable(tab, format = "latex")
tab
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=F)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(foreign)
fhs <- read.dta("https://drive.google.com/uc?export=download&id=0B8CsRLdwqzbzWFc2R0ozTlAzcjQ")
library(car)
p<-powerTransform(fhs$sysbp1)
fhs$sysbp1t <-bcPower(fhs$sysbp1,p$lambda)
###################
##     RUN THIS IN R FOR CLASS    ##
###################
library(leaps)
leaps <- regsubsets(sysbp1t~ bmi1 + age1 +
diabp1 + prevhyp1 + prevchd1 + prevmi1 +
cursmoke1 + cigpday1 + bpmeds1, data=fhs, nbest=1)
summary(leaps)
leaps <- regsubsets(sysbp1t~ bmi1 + age1 +
diabp1 + prevhyp1 + prevchd1 + prevmi1 +
cursmoke1 + cigpday1 + bpmeds1, data=fhs, nbest=3)
summary(leaps)
names(leaps)
names(summary(leaps))
summary(leaps)$bic
min(summary(leaps)$bic)
###################
##     RUN THIS IN R FOR CLASS    ##
###################
library(leaps)
leaps <- regsubsets(sysbp1t~ bmi1 + age1 +
diabp1 + prevhyp1 + prevchd1 + prevmi1 +
cursmoke1 + cigpday1 + bpmeds1, data=fhs, nbest=1)
summary(leaps)
names(summary(leaps))
min(summary(leaps)$bic)
min(summary(leaps)$bic)
which(summary(leaps)$bic == min(summary(leaps)$bic))
summary(leaps)
#Variables we care about in model
myvars <- c("sysbp1t", "bmi1", "age1", "diabp1", "prevhyp1", "prevchd1",
"prevmi1", "cursmoke1", "cigpday1", "bpmeds1")
#Selecting only these variables
fhs_sub_sel <- fhs[myvars]
#Selecting only those rows with complete cases
fhs_sub_sel <- fhs_sub_sel[complete.cases(fhs_sub_sel),]
fhs[myvars]
complete.cases(fhs_sub_sel)
#Variables we care about in model
myvars <- c("sysbp1t", "bmi1", "age1", "diabp1", "prevhyp1", "prevchd1",
"prevmi1", "cursmoke1", "cigpday1", "bpmeds1")
#Selecting only these variables
fhs_sub_sel <- fhs[myvars]
#Selecting only those rows with complete cases
fhs_sub_sel <- fhs_sub_sel[complete.cases(fhs_sub_sel),]
library(MASS)
#Begin with model of only intercept
int_mod <- lm(sysbp1t~ 1, data=fhs_sub_sel)
#Fit forward with AIC
step_aic <- stepAIC(int_mod, scope= ~ bmi1 + age1 + diabp1 + prevhyp1 + prevchd1 + prevmi1 +  cursmoke1 +
cigpday1 + bpmeds1,  direction="forward", k=2)
step_aic$anova
#Fit forward with BIC
step_bic <- stepAIC(int_mod, scope= ~ bmi1 + age1 + diabp1 +
prevhyp1 + prevchd1 + prevmi1 +  cursmoke1 +
cigpday1 + bpmeds1,  direction="forward", k=log(n))
#Define penalty for BIC
n = dim(fhs_sub_sel)[1]
#Fit forward with BIC
step_bic <- stepAIC(int_mod, scope= ~ bmi1 + age1 + diabp1 +
prevhyp1 + prevchd1 + prevmi1 +  cursmoke1 +
cigpday1 + bpmeds1,  direction="forward", k=log(n))
step_bic$anova
full_mod <- lm(sysbp1t~ bmi1 + age1 + diabp1 + prevhyp1 + prevchd1 +
prevmi1 + cursmoke1 + cigpday1 + bpmeds1, data=fhs_sub_sel)
#Fit backward with AIC
step_aic <- stepAIC(full_mod,   direction="backward", k=2)
step_aic$anova
#Fit bacward with BIC
step_bic <- stepAIC(full_mod,   direction="backward", k=log(n))
step_bic$anova
step_bic$anova
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
knitr::opts_chunk$set(eval=F)
rat <- read.table("C:/Users/adam_/Dropbox/Brown/PHP2511/BIO 210/Data/rat.dat", quote="\"", comment.char="")
names(rat) <- c("group", "days", "status")
sum(rat$status[which(rat$group==1,)])/sum(rat$days[which(rat$group==1,)])
sum(rat$status[which(rat$group==2,)])/sum(rat$days[which(rat$group==2,)])
#Load data
rat.pois <- glm(status~ group + offset(log(days)), data=rat ,family="poisson")
summary(rat.pois)
exp(confint(rat.pois))
rat <- read.table("rat.dat", quote="\"", comment.char="")
rat <- read.table("rat.txt", quote="\"", comment.char="")
names(rat) <- c("group", "days", "status")
sum(rat$status[which(rat$group==1,)])/sum(rat$days[which(rat$group==1,)])
sum(rat$status[which(rat$group==1,)])/sum(rat$days[which(rat$group==1)])
sum(rat$status[which(rat$group==1)])/sum(rat$days[which(rat$group==1)])
rat
rat <- read.table("rat.dat", quote="\"", comment.char="")
names(rat) <- c("group", "days", "status")
sum(rat$status[which(rat$group==1)])/sum(rat$days[which(rat$group==1)])
sum(rat$status[which(rat$group==2)])/sum(rat$days[which(rat$group==2)])
sum(rat$status[which(rat$group==1),])/sum(rat$days[which(rat$group==1)])
#Load data
rat.pois <- glm(status~ group + offset(log(days)), data=rat ,family="poisson")
summary(rat.pois)
exp(confint(rat.pois))
knitr::opts_chunk$set(cache=FALSE, dev='pdf')
mon <- as.Date("2018-09-03")
# fri <- as.Date("2016-01-08")
advdate <- function(obj, adv) {
tmon <- obj + 7*(adv-1)
tfri <- obj + 4 + 7*(adv-1)
tmon <- format(tmon, format="%m/%d")
tfri <- format(tfri, format="%m/%d")
zadv <- sprintf("%02d", adv)
tmp <- paste("Week ",zadv,sep='',", ", tmon," - ",tfri)
return(tmp)
}
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(gapminder)
gapminder
library(gapminder)
library(tidyverse)
library(ggplot2)
gapminder %>%
ggplot(aes(year, lifeExp, group = country)) +
geom_line(alpha = 1/3)
kenya <- gapminder %>%
filter(country=="Kenya")
kenya_mod <- lm(lifeExp ~year, data=kenya)
kenya %>%
ggplot(aes(year, lifeExp)) +
geom_line()
kenya %>%
ggplot(aes(year, lifeExp)) +
geom_line()
kenya %>%
add_predictions(kenya_mod) %>%
ggplot(aes(year, pred)) +
geom_line()
library(modelr)
kenya %>%
add_predictions(kenya_mod) %>%
ggplot(aes(year, pred)) +
geom_line()
kenya %>%
add_predictions(kenya_mod) %>%
ggplot(aes(year, pred)) +
geom_line()
table(gapminder$continent)
by_country %>%
filter(continent == "Americas")
1299/57724
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
estm <- rep(c("intercept","slope"), length(b))
estm
subj <- rep(names(b), each=2)
subj
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(nlme)
head(Orthodont)
Orthodont$age <- Orthodont$age - 8
library(lattice)
xyplot( distance ~ age , data= Orthodont, groups=Subject, type='l', auto.key=list(space="top", columns=4,
title="Subject", cex.title=1), main="Distance")
library(nlme)
reg.list <- lmList(distance ~ age, data=Orthodont)
summary(reg.list)
b <- lapply(reg.list, coef)
b
V <- lapply(reg.list, vcov)
V
estm <- rep(c("intercept","slope"), length(b))
estm
subj <- rep(names(b), each=2)
subj
install.packages("metafor")
library(metafor)
library(devtool)
library(devtools)
?install_github
install_github("cran/metafor")
library(metafor)
V
res2
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(nlme)
head(Orthodont)
Orthodont$age <- Orthodont$age - 8
library(lattice)
xyplot( distance ~ age , data= Orthodont, groups=Subject, type='l', auto.key=list(space="top", columns=4,
title="Subject", cex.title=1), main="Distance")
library(nlme)
reg.list <- lmList(distance ~ age, data=Orthodont)
summary(reg.list)
b <- lapply(reg.list, coef)
b
V <- lapply(reg.list, vcov)
V
estm <- rep(c("intercept","slope"), length(b))
estm
subj <- rep(names(b), each=2)
subj
library(metafor)
b <- unlist(b)
V <- bldiag(V)
V
res2 <- rma.mv(b ~ estm-1, V, random = ~ estm | subj, struct="UN")
res2
summary(res2)
summary(res2)[1:10]
summary(res2)
summary(res2)[1]
summary(res2)[1,]
summary(res2)
reg.mix <- lme(distance ~ age, random = ~ age | Subject, data=Orthodont)
summary(reg.mix)
summary(reg.mix)
reg.mix2 <- lme(distance ~ age + Sex, random = ~ age | Subject, data=Orthodont)
summary(reg.mix2)
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
library(nlme)
head(Orthodont)
Orthodont$age <- Orthodont$age - 8
library(lattice)
xyplot( distance ~ age , data= Orthodont, groups=Subject, type='l', auto.key=list(space="top", columns=4,
title="Subject", cex.title=1), main="Distance")
library(nlme)
reg.list <- lmList(distance ~ age, data=Orthodont)
summary(reg.list)
library(knitr)
opts_chunk$set(error = TRUE)
opts_chunk$set(warning=FALSE)
opts_chunk$set(message=FALSE)
opts_chunk$set(results="hold")
opts_chunk$set(cache=T)
opts_chunk$set(  tidy=F,size="small")
opts_chunk$set(tidy.opts=list(width.cutoff=60))
options(digits = 3, scipen = 3)
V
