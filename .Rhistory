raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1 <- lm(data=raw.corr, response~predictor1 )
mod2 <- lm(data=raw.corr, response~predictor2)
mod3 <- lm(data=raw.corr, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
library(broom)
library(dplyr)
mod1 <- lm(data=raw.corr, response~predictor1 )
mod2 <- lm(data=raw.corr, response~predictor2)
mod3 <- lm(data=raw.corr, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1 <- lm(data=raw.corr, response~predictor1 )
mod2 <- lm(data=raw.corr, response~predictor2)
mod3 <- lm(data=raw.corr, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
Rcor = matrix(cbind(1,.80,.8,  .80,1,.7,  .8,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1 <- lm(data=raw.corr, response~predictor1 )
mod2 <- lm(data=raw.corr, response~predictor2)
mod3 <- lm(data=raw.corr, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
glance(mod1)
glance(mod2)
glance(mod3)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=F)
set.seed(456)
Runc = matrix(cbind(1,.80,.2,  .80,1,0,  .2,0,1),nrow=3)
U = t(chol(Runc))
Unvars = dim(U)[1]
numobs = 100000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw),3)
library(broom)
library(dplyr)
mod1 <- lm(data=raw, response~predictor1 )
mod2 <- lm(data=raw, response~predictor2)
mod3 <- lm(data=raw, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
Rcor = matrix(cbind(1,.80,.8,  .80,1,.7,  .8,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1c <- lm(data=raw.corr, response~predictor1 )
mod2c <- lm(data=raw.corr, response~predictor2)
mod3c <- lm(data=raw.corr, response~predictor1 + predictor2)
tidy1c <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2c <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3c <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1c,tidy2c,tidy3c))
glance(mod1)
glance(mod2)
glance(mod3)
anova(mod1)
anova(mod2)
anova(mod3)
anova(mod1c)
anova(mod2c)
anova(mod3c)
tidy(anova(mod1))
tidy(anova(mod1))
tidy11 <- tidy(anova(mod1))[1, c(1:3)]
tidy22 <- tidy(anova(mod2))[1, c(1:3)]
tidy33 <- tidy(anova(mod3))[1, c(1:3)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
tidy11 <- tidy(anova(mod1))[1, c(1:3)]
tidy22 <- tidy(anova(mod2))[1, c(1:3)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:3)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:3), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
set.seed(456)
Runc = matrix(cbind(1,.80,.8,  .80,1,0,  .8,0,1),nrow=3)
U = t(chol(Runc))
Unvars = dim(U)[1]
numobs = 100000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw),3)
set.seed(456)
Runc = matrix(cbind(1,.80,.8,  .80,1,0,  .8,0,1),nrow=3)
U = t(chol(Runc))
Unvars = dim(U)[1]
numobs = 100000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw),3)
#Correlation
round(cor(raw),3)
library(broom)
library(dplyr)
mod1 <- lm(data=raw, response~predictor1 )
mod2 <- lm(data=raw, response~predictor2)
mod3 <- lm(data=raw, response~predictor1 + predictor2)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33))
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 10000
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1c <- lm(data=raw.corr, response~predictor1 )
mod2c <- lm(data=raw.corr, response~predictor2)
mod3c <- lm(data=raw.corr, response~predictor1 + predictor2)
mod4c <- lm(data=raw.corr, response~predictor2 + predictor1)
tidy1c <- tidy(mod1c, conf.int=T)[-1,-c(3:4)]
tidy2c <- tidy(mod2c, conf.int=T)[-1,-c(3:4)]
tidy3c <- tidy(mod3c, conf.int=T)[-1,-c(3:4)]
tidy4c <- tidy(mod4c, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1c,tidy2c,tidy3c, tidy4c))
glance1c <- glance(mod1c)[,c(1:5)]
glance2c <- glance(mod2c)[,c(1:5)]
glance3c <- glance(mod3c)[,c(1:5)]
glance4c <- glance(mod4c)[,c(1:5)]
knitr::kable(bind_rows(glance1c,glance2c,glance3c, glance4c))
tidy11c <- tidy(anova(mod1c))[1, c(1:4)]
tidy22c <- tidy(anova(mod2c))[1, c(1:4)]
tidy33c <- tidy(anova(mod3c))[c(1:2), c(1:4)]
tidy44c <- tidy(anova(mod4c))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11c,tidy22c,tidy33c, tidy44c))
library(broom)
library(dplyr)
mod1 <- lm(data=raw, response~predictor1 )
mod2 <- lm(data=raw, response~predictor2)
mod3 <- lm(data=raw, response~predictor1 + predictor2)
mod4 <- lm(data=raw, response~predictor2 + predictor1)
tidy1 <- tidy(mod1, conf.int=T)[-1,-c(3:4)]
tidy2 <- tidy(mod2, conf.int=T)[-1,-c(3:4)]
tidy3 <- tidy(mod3, conf.int=T)[-1,-c(3:4)]
tidy4 <- tidy(mod4, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1,tidy2,tidy3, tidy4))
glance1 <- glance(mod1)[,c(1:5)]
glance2 <- glance(mod2)[,c(1:5)]
glance3 <- glance(mod3)[,c(1:5)]
glance4 <- glance(mod4)[,c(1:5)]
knitr::kable(bind_rows(glance1,glance2,glance3, glance4))
tidy11 <- tidy(anova(mod1))[1, c(1:4)]
tidy22 <- tidy(anova(mod2))[1, c(1:4)]
tidy33 <- tidy(anova(mod3))[c(1:2), c(1:4)]
tidy44 <- tidy(anova(mod4))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11,tidy22,tidy33, tidy44))
library(car)
vif(mod3)
library(car)
vif(mod3)
vif(mod4)
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(vif1,vif2)
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
vif(mod3c)
vif(mod4c)
vif(mod4c)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
library(broom)
library(dplyr)
mod1c <- lm(data=raw.corr, response~predictor1 )
mod2c <- lm(data=raw.corr, response~predictor2)
mod3c <- lm(data=raw.corr, response~predictor1 + predictor2)
mod4c <- lm(data=raw.corr, response~predictor2 + predictor1)
tidy1c <- tidy(mod1c, conf.int=T)[-1,-c(3:4)]
tidy2c <- tidy(mod2c, conf.int=T)[-1,-c(3:4)]
tidy3c <- tidy(mod3c, conf.int=T)[-1,-c(3:4)]
tidy4c <- tidy(mod4c, conf.int=T)[-1,-c(3:4)]
knitr::kable(bind_rows(tidy1c,tidy2c,tidy3c, tidy4c))
tidy11c <- tidy(anova(mod1c))[1, c(1:4)]
tidy22c <- tidy(anova(mod2c))[1, c(1:4)]
tidy33c <- tidy(anova(mod3c))[c(1:2), c(1:4)]
tidy44c <- tidy(anova(mod4c))[c(1:2), c(1:4)]
knitr::kable(bind_rows(tidy11c,tidy22c,tidy33c, tidy44c))
library(car)
vif1 <- vif(mod3)
vif2 <- vif(mod4)
knitr::kable(bind_rows(vif1,vif2))
library(car)
vif1 <- vif(mod3c)
vif2 <- vif(mod4c)
knitr::kable(bind_rows(vif1,vif2))
Rcor = matrix(cbind(1,.80,.2,  .80,1,.9,  .2,.9,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
#Correlation
round(cor(raw.corr),3)
Rcor = matrix(cbind(1,.80,.2,  .80,1,.7,  .2,.7,1),nrow=3)
U = t(chol(Rcor))
Unvars = dim(U)[1]
numobs = 100
set.seed(1)
random.normal = matrix(rnorm(Unvars*numobs,0,1), nrow=Unvars, ncol=numobs);
X = U %*% random.normal
newX = t(X)
raw.corr = as.data.frame(newX)
orig.raw = as.data.frame(t(random.normal))
names(raw.corr) = c("response","predictor1","predictor2")
#Correlation
round(cor(raw.corr),3)
?knitr::kable
10+10+12+10+6+40
10+10+12+10+10+40
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
phscrc <- read_dta("phscrc.dta")
phscrc$age.cat <- cut(phscrc$age, c(40,50,60,70, 90), right=FALSE)
phscrc$alcohol.use <- factor(phscrc$alcohol>0, labels=c("no", "yes"))
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable)
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable)
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
mytable
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
knitr::kable(mytable)
?pandoc.table
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable, style="rmarkdown")
mytable <- xtabs(~age.cat+alcohol.use+ crc, phscrc)
library(pander)
pandoc.table(mytable, style="multiline")
pandoc.table(mytable, style="grid")
mod1 <- glm(crc ~ alcohol.use+ age, phscrc, family=binomial(link="logit"))
mod2 <- glm(crc ~ alcohol.use*age, phscrc, family=binomial(link="logit"))
phscrc$age.cent <- phscrc$age - mean(phscrc$age,na.rm=TRUE)
mod3 <- glm(crc ~ alcohol.use*age.cent, phscrc, family=binomial(link="logit"))
library(broom)
tidy(mod1, conf.int=T)[,-c(3:4)]
library(broom)
knitr::kable(tidy(mod1, conf.int=T)[,-c(3:4)])
mod1 <- glm(crc ~ alcohol.use+ age, phscrc, family=binomial(link="logit"))
tidy(mod1, conf.int = T)[,-c(3:4)]
glance(mod1)
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
mod5 <- glm(formula = crc ~ factor(alcohol), family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod5, conf.int=T)[,-c(3:4)])
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
anova(mod4, mod5, test="Chisq")
mod4 <- glm(formula = crc ~ alcohol, family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod4, conf.int = T)[,-c(3:4)])
mod5 <- glm(formula = crc ~ factor(alcohol), family = binomial(link = "logit"), data = phscrc)
knitr::kable(tidy(mod5, conf.int=T)[,-c(3:4)])
anova_mod <-anova(mod4, mod5, test="Chisq")
knitr::kable(tidy(anova_mod))
library(ResourceSelection)
install.packages("ResourceSelection")
library(ResourceSelection)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k)
summary(mod.back.auto)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k)
summary(mod.back.auto)
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k=2)
summary(mod.back.auto)
library(ggplot2)
library(ROCR)
prob <- predict(mod.back.auto)
pred <- prediction(prob, sah$dead)
perf <- performance(pred, "tpr", "fpr")
# I know, the following code is bizarre. Just go with it.
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) + geom_abline(intercept = 0, slope = 1, colour = "gray")+
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc))
install.packages("ROCR")
?hoslem.test
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=6)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=8)
knitr::opts_chunk$set(error = TRUE)
knitr::opts_chunk$set(warning=FALSE)
knitr::opts_chunk$set(message=FALSE)
knitr::opts_chunk$set(results="hold")
knitr::opts_chunk$set(cache=T)
library(haven)
sah <- read_dta("sah.dta")
library(MASS)
sah2 <- as.numeric(sah$sah)
Full <- glm(formula = dead ~ sah2 + age + male + pperf + perf + cogerr + sbp + mile + digit + loop + untrt + trtdp, family = binomial(link = "logit"), data = sah)
mod.back.auto <- stepAIC(Full,scope = .~1, direction="backward",k=2)
summary(mod.back.auto)
summary(mod.back.auto)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
class(sah$dead)
table(sah$dead)
sah$dead <- as.numeric(sah$dead)
table(sah$dead)
library(ResourceSelection)
hoslem.test(sah$dead, fitted(mod.back.auto), g=10)
library(ResourceSelection)
1/0 - 1/0
